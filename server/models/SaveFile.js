const mongoose = require('mongoose');

const saveFileSchema = new mongoose.Schema({
  title: {
    type: String,
    required: true,
    minlength: 1,
    maxlength: 50,
  },
  civilization: {
    type: String,
    required: true,
    enum: [
      'Arabia',
      'Australia',
      'Aztec',
      'Babylon',
      'Brazil',
      'Byzantium',
      'Canada',
      'China',
      'Cree',
      'Egypt',
      'England',
      'Ethiopia',
      'France',
      'Gaul',
      'Germany',
      'Gran Colombia',
      'Greece',
      'Hungary',
      'India',
      'Indonesia',
      'Japan',
      'Khmer',
      'Kongo',
      'Korea',
      'Macedon',
      'Mali',
      'Mapuche',
      'Maori',
      'Maya',
      'Mongolia',
      'Netherlands',
      'Nubia',
      'Ottoman Empire',
      'Persia',
      'Phoenicia',
      'Portugal',
      'Rome',
      'Scotland',
      'Spain',
      'Sumeria',
      'Sweden',
      'United States',
      'Vietnam',
      'Zulu',
    ],
  },
  leader: {
    type: String,
    required: true,
    enum: [
      'Abraham Lincoln – United States',
      'Alexander – Macedonia',
      'Ambiorix – Gaul',
      'Amanitore – Nubia',
      'Bà Triệu – Vietnam',
      'Basil II – Byzantium',
      'Catherine de Medici – France',
      'Chandragupta – India',
      'Cleopatra – Egypt',
      'Cyrus – Persia',
      'Dido – Phoenicia',
      'Eleanor of Aquitaine – France',
      'Eleanor of Aquitaine – England',
      'Elizabeth I – England',
      'Frederick Barbarossa – Germany',
      'Gandhi – India',
      'Genghis Khan – Mongolia',
      'Gilgamesh – Sumeria',
      'Gitarja – Indonesia',
      'Gorgo – Greece',
      'Hammurabi – Babylon',
      'Harald Hardrada – Norway',
      'Hojo Tokimune – Japan',
      'John Curtin – Australia',
      'João III – Portugal',
      'Julius Caesar – Rome',
      'Jayavarman VII – Khmer',
      'Kristina – Sweden',
      'Kublai Khan – Mongolia',
      'Kublai Khan – China',
      'Kupe – Māori',
      'Lautaro – Mapuche',
      'Lady Six Sky – Maya',
      'Mansa Musa – Mali',
      'Matthias Corvinus – Hungary',
      'Menelik II – Ethiopia',
      'Montezuma – Aztec',
      'Mvemba a Nzinga – Kongo',
      'Napoleon Bonaparte – France',
      'Nader Shah – Persia',
      'Pedro II – Brazil',
      'Pericles – Greece',
      'Poundmaker – Cree',
      'Qin Shi Huang – China',
      'Ramesses II – Egypt',
      'Robert the Bruce – Scotland',
      'Saladin – Arabia',
      'Sejong – Korea',
      'Shaka – Zulu',
      'Simon Bolívar – Gran Colombia',
      'Suleiman – Ottoman Empire',
      'Sundiata Keita – Mali',
      'Suleiman the Magnificent – Ottoman Empire',
      'Tamar – Georgia',
      'Teddy Roosevelt – United States',
      'Theodora – Byzantium',
      'Trajan – Rome',
      'Victoria – England',
      'Wilfrid Laurier – Canada',
      'Wu Zetian – China',
    ],
  },
  ruleset: {
    type: String,
    required: true,
    enum: [
      'Expansion: Gathering Storm',
      'Expansion: Rise and Fall',
      'Standard Rules',
    ],
  },
  gameDifficulty: {
    type: String,
    required: true,
    enum: [
      'Settler',
      'Chieftain',
      'Warlord',
      'Prince',
      'King',
      'Emperor',
      'Immortal',
      'Deity',
    ],
  },
  gameSpeed: {
    type: String,
    required: true,
    enum: ['Online', 'Quick', 'Standard', 'Epic', 'Marathon'],
  },
  map: {
    type: String,
    required: true,
  },
  mapSize: {
    type: String,
    required: true,
    enum: [
      'Duel',
      'Tiny',
      'Small',
      'Standard',
      'Large',
      'Huge',
      'Enormous',
      'Giant',
    ],
  },
  gameModes: {
    type: [String],
    enum: [
      'Apocalypse Mode',
      'Barbarian Clans Mode',
      'Dramatic Ages Mode',
      'Heroes & Legends Mode',
      'Monopolies and Corporations Mode',
      'Secret Societies Mode',
      'Tech and Civic Shuffle Mode',
      'Zombie Defense Mode',
    ],
    default: [],
  },

  description: {
    type: String,
    required: true,
    minlength: 20,
    maxlength: 1000,
  },
  saveFile: {
    type: String,
    required: true,
  },
  //
  //
  startLocationImage: {
    type: String,
    required: true,
  },
  //
  //
  startPositionBalance: {
    type: String,
    enum: ['Balanced', 'Standard', 'Legendary'],
  },
  resourceQuantity: {
    type: String,
    enum: ['Sparse', 'Standard', 'Abundant', 'Random'],
  },
  mods: {
    type: String,
  },
  numberOfAICivilizations: {
    type: Number,
    min: 1,
    max: 62,
  },
  numberOfCityStates: {
    type: Number,
    min: 1,
    max: 60,
  },
  startEra: {
    type: String,
    enum: [
      'Ancient Era',
      'Classical Era',
      'Medieval Era',
      'Renaissance Era',
      'Industrial Era',
      'Modern Era',
      'Atomic Era',
      'Information Era',
    ],
  },
  victoryConditions: {
    type: [String],
    enum: [
      'Culture Victory',
      'Diplomatic Victory',
      'Domination Victory',
      'Religious Victory',
      'Science Victory',
      'Score Victory',
    ],
    default: [
      'Culture Victory',
      'Diplomatic Victory',
      'Domination Victory',
      'Religious Victory',
      'Science Victory',
      'Score Victory',
    ],
  },
  disasterIntensity: {
    type: Number,
    min: 1,
    max: 4,
  },
  worldAge: {
    type: String,
    enum: ['New', 'Standard', 'Old', 'Random'],
  },
  rainfall: {
    type: String,
    enum: ['Arid', 'Standard', 'Wet', 'Random'],
  },
  coastalLowland: {
    type: String,
    enum: ['Empty', 'Import', 'Map Generator', 'Matching flatland'],
  },
  seaLevel: {
    type: String,
    enum: ['Low', 'Standard', 'High', 'Random'],
  },
  startPositionLink: {
    type: String,
    enum: ['Random', 'Cultural', 'Distance-Relative'],
  },
  advancedOptions: {
    type: [String],
    enum: [
      'No Duplicate Civilizations',
      'No Duplicate Leaders',
      'Teams Share Visibility',
      'No Barbarians',
      'No Teams',
      'No Tribal Villages',
    ],
    default: [
      'No Duplicate Civilizations',
      'No Duplicate Leaders',
      'Teams Share Visibility',
    ],
  },
  gameRandomSeed: {
    type: Number,
    max: 9999999999,
  },
  mapRandomSeed: {
    type: Number,
    max: 9999999999,
  },
});

module.exports = mongoose.model('SaveFile', saveFileSchema);
